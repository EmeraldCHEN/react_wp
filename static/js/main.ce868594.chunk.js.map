{"version":3,"sources":["../../react_wp_demo/src/App.js","../../react_wp_demo/src/serviceWorker.js","../../react_wp_demo/src/index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","products","dataRoute","react_default","a","createElement","className","href","target","rel","style","color","textDecorationLine","textDecoration","fontSize","map","product","key","concat","id","src","image","alt","name","_this2","fetch","then","res","json","setState","prevState","mapProduct","price","title","rendered","description","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce868594.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nimport './App.css';\n\nclass  App  extends  Component {\n  constructor(props){\n      super(props);\n      this.state  = {\n          products: [],\n          dataRoute:  \"https://emeraldchen.000webhostapp.com/wp-json/wp/v2/posts\"\n      }\n  }\n  render() {\n \n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <nav>\n          <a href=\"http://emerald.rf.gd/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color: \"yellow\", \n          textDecorationLine: 'none'}}> Home | </a> \n          <a href=\"http://emerald.rf.gd/about-us/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color: \"yellow\", \n          textDecorationLine: 'none'}}>  About Us  | </a>\n          <a href=\"http://emerald.rf.gd/help-for-refugees/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color: \"yellow\", \n          textDecorationLine: 'none'}}>Help for Refugees | </a>\n          <a href=\"http://emerald.rf.gd/get-involved/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color: \"yellow\", \n          textDecorationLine: 'none'}}>Get Involved  | </a>\n          <a href=\"http://emerald.rf.gd/contact/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color: \"yellow\", \n          textDecorationLine: 'none'}}>Contact Us   </a>\n          </nav>\n          {/* <br></br><br></br><br></br><br></br><br></br><br></br><br></br> */}\n          <h1>ChangeMakers Refugee Forum</h1>\n          \n        <h3>New Zealanders from refugee backgrounds participating fully in NZ life</h3>\n        {/* <br></br><br></br><br></br><br></br> */}\n        <ul>\n            <a href=\"https://givealittle.co.nz/cause/turning-the-curve-teaching-refugee-background#\" \n              target=\"_blank\" rel=\"noopener noreferrer\" ><b style={{color: \"yellow\",textDecoration: 'underline overline',fontSize:28}}>DONATE NOW</b></a>\n        </ul>\n    \n        </div>\n        <br></br>\n        <hr></hr>\n        <br></br>\n        <div className=\"products\">\n\n          {this.state.products.map((product) => \n            <div className=\"product\" key={`product-${product.id}}`}>\n\n              <img src={ product.image } alt={ product.name } className=\"product-image\"/>\n              <p>{ product.name }</p>\n\n              {/* <p className=\"snipcart-add-item\"\n                data-item-name={ product.name }\n                data-item-id={ product.id }\n                data-item-image={ product.image }\n                data-item-description={ product.description }\n                data-item-url= { `${this.state.dataRoute}/${product.id}`}\n                data-item-price={ product.price }>\n                { product.price } \n              </p> */}\n              <a href=\"https://givealittle.co.nz/cause/turning-the-curve-teaching-refugee-background#\" \n              target=\"_blank\" rel=\"noopener noreferrer\"><button>Read More </button></a>\n            <hr></hr>\n            <br></br>\n            </div>\n          )}\n          \n        </div>\n        <nav>            \n        <a href=\"http://emerald.rf.gd/\" target=\"_blank\" rel=\"noopener noreferrer\"> Home  </a> | \n        <a href=\"http://emerald.rf.gd/about-us/\" target=\"_blank\" rel=\"noopener noreferrer\"> About Us </a> | \n        <a href=\"http://emerald.rf.gd/help-for-refugees/\" target=\"_blank\" rel=\"noopener noreferrer\"> Help for Refugees </a> | \n        <a href=\"http://emerald.rf.gd/get-involved/\" target=\"_blank\" rel=\"noopener noreferrer\"> Get Involved  </a> | \n        <a href=\"http://emerald.rf.gd/contact/\" target=\"_blank\" rel=\"noopener noreferrer\"> Contact Us   </a> \n      \n        </nav>\n    \n        <br></br>\n      </div>\n    );\n}\n\ncomponentDidMount(){\n    fetch(this.state.dataRoute)\n      .then(res => res.json())\n      .then(products => this.setState((prevState, props) => {\n        return { products: products.map(this.mapProduct)};\n      }));\n  }\n\n  mapProduct(product){\n    return {\n      id: product.id,\n      price: product.price,\n      image: product.image,\n      name: product.title.rendered,\n      description: product.description\n    }\n}\n}\nexport  default  App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}